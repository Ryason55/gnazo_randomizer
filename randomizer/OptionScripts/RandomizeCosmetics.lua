local SpriteInUse = {{},{}}
local FairySpriteFilepaths = {}
FairySpriteFilepaths[1] = {"gr\\ribbonyouseim1.bmp","gr\\ribbonyouseim2.bmp","gr\\ribbonyouseim3.bmp","gr\\ribbonyouseim4.bmp","ex\\ribbonfairyw1.png","ex\\ribbonfairyw2.png","ex\\ribbonfairyw3.png"}
FairySpriteFilepaths[2] = {"gr\\ribbonyouseim5.bmp","gr\\ribbonyouseim6.bmp","gr\\ribbonyouseim7.bmp","gr\\ribbonyouseim8.bmp","ex\\ribbonfairys1.png","ex\\ribbonfairys2.png","ex\\ribbonfairys3.png","ex\\ribbonfairys4.png","ex\\ribbonfairys5.png","ex\\ribbonfairys6.png"}
local FairySpriteFilepathAddress = 0x3165A8
ResetRNG(RandomSeed)
for i = 0,7,1 do
  local tableindex = 1
  if i >= 4 then
    tableindex = 2
  end
  local SpriteIndex
  for a = 1,50,1 do
    SpriteIndex = math.random(1,#FairySpriteFilepaths[tableindex])
    if not SpriteInUse[tableindex][SpriteIndex] then
      SpriteInUse[tableindex][SpriteIndex] = true
      local StringLength = string.len(FairySpriteFilepaths[tableindex][SpriteIndex])
      for n = 1,21,1 do
        if n <= StringLength then
          local Byte = string.byte(FairySpriteFilepaths[tableindex][SpriteIndex],n)
          writeBytes(string.format("gnazo.exe+%X", 0x3165A8 + (i*0x18) + (n-1) ),Byte)
        else
          writeBytes(string.format("gnazo.exe+%X", 0x3165A8 + (i*0x18) + (n-1) ),0)
        end
      end
      break
    end
  end
end

local TestMemoryAddress = readInteger("gnazo.exe+5005")
local JumpOffset1 = (TestMemoryAddress - 0x0000543C) + 0x00057EAD
local JumpOffset2 = (0x0000543C - 0x00057ED5) - 5
--Allows Player Yukari shots to have random colors
writeBytes("gnazo.exe+5004",0xE9)
writeInteger("gnazo.exe+5005",JumpOffset1)
writeBytes("gnazo.exe+57EAD",{0x81,0xE2,0x0F,0x00,0x00,0x80,0x79,0x05,0x4A,0x83,0xCA,0xF0,0x42,0x81,0xF9,0x70,0x62,0x00,0x00,0x7D,0x09,0x8D,0x84,0x11,0xF4,0x9D,0xFF,0xFF,0xEB,0x07,0x8D,0x84,0x11,0x90,0x9D,0xFF,0xFF,0x89,0x46,0x54,0xE9})
writeInteger("gnazo.exe+57ED6",JumpOffset2)

local HardcodedBullets = {0x3F78,0x3FF0,0x5821,0x5897,0x5971,0x61CA,0x6231,0x627F,0x62C6,0x6559,0x6636,0x6713,0x68B3,0x7337,0x76D3,0x7780,0x7CD1,0xA7AB,0xA826,0xA893,0xA908,0xA975,0xA9EA,0xAA5B,0xAF94,0xB060,0xB155,0xB220,0xB320,0xB400,0xB533,0xB5A9,0xB62D,0xB6AE,0xB729,0xB7AC,0xBDD4,0xBE7E,0xBF40,0xCD1F,0xCD9D,0xCE05,0xCE7D,0xCEEB,0xD2CC,0xD362,0xD5F6,0xD66F,0xD708,0xD799,0xD832,0xDA07,0xDAB7,0xDB74,0xDC1D,0xDCAB,0xF666,0xF740,0xF818,0x122AC,0x1232D,0x1239E,0x1240F,0x1247C,0x124F1,0x1255E,0x128E8,0x12E01,0x12F1F,0x12F95,0x13019,0x1309A,0x13115,0x13194,0x1324A,0x132D9,0x13362,0x133EF,0x13475,0x13504,0x1358D,0x1361A,0x13B68,0x13C8D,0x144F6,0x14577,0x145EA,0x1465D,0x146CE,0x1480F,0x148DA,0x14A52,0x14B1D,0x14E12,0x15285,0x15304,0x1539D,0x1542E,0x154C3,0x1573A,0x157E9,0x158A2,0x1595B,0x15A1A,0x15ADB,0x15B86,0x15C1B,0x15DDE,0x16FC4,0x28AD8,0x357DF,0x35861,0x4187F,0x6C898,0x6CB71,0x6CD37,0x6D0F6,0x6D1C7,0x6D26C,0x6D33F,0x6D421,0x6D4AC,0x6D573,0x6D5FD,0x6D7A8,0x6D844,0x6D8D7,0x6D967,0x6DA5F,0x6DB7B,0x6DC74,0x6DD94,0x6E0AB,0x6E2C4,0x6E702,0x6E782,0x6E8CE,0x6E994,0x6EA5D,0x6EAF2,0x6EB79,0x6EC00,0x6ED17,0x6EE87,0x6EFC3,0x6F049,0x6F0C1,0x6F13A,0x6F2DE,0x6F374,0x6F403,0x6F555,0x6F685,0x6F755,0x6FD33,0x6FFD4,0x70267,0x7073A,0x70828,0x70B85,0x70C94,0x70D77,0x70E5A,0x71028,0x710D2,0x713B0,0x714B8,0x715D8,0x716A0,0x71896,0x719B0,0x71AB2,0x71B78,0x71FE9,0x7214C,0x72231,0x72386,0x7252A,0x725EA,0x726B7,0x72792,0x7285F,0x7292C,0x72A07,0x72AC6,0x72B93,0x72DFB,0x73571,0x73634,0x736EE,0x737BA,0x73944,0x73A2A,0x73AFA,0x73C60,0x73D1F,0x73DB9,0x73E94,0x73F53,0x73FED,0x7409E,0x7412B,0x7477C,0x7484C,0x74924,0x749EE,0x74AB8,0x74B73,0x74C3D,0x74CD6,0x74DAE,0x74E75,0x74F3F,0x74FF6,0x750C0,0x751BB,0x75390,0x755AC,0x75644,0x756DB,0x75772,0x7593F,0x759D7,0x75A6E,0x75B05,0x75DAA,0x75E8D,0x76690,0x7678E,0x768A3,0x769D7,0x76B88,0x76CDC,0x77686,0x785E6,0x786BA,0x78CBC,0x78DA5,0x78EDC,0x78FC5,0x7910F,0x791D8,0x79495,0x79565,0x79623,0x79718,0x7980E,0x79911,0x799D3,0x79ACE,0x79BCC,0x79CD6,0x79FFD,0x7A0C7,0x7A18B,0x7A288,0x7A386,0x7A491,0x7A553,0x7A64E,0x7A74C,0x7A856,0x7AAEE,0x7ABDA,0x7ACAE,0x7AD98,0x7AE71,0x7AF5B,0x7B03E,0x7B128,0x7B259,0x7B34E,0x7BC97,0x7BE27,0x7BFA7,0x7C137,0x7C910,0x7C9F0,0x7CAD6,0x7CC61,0x7CCF9,0x7CD81,0x7CE15,0x7D2E5,0x7E85D,0x7EA17,0x7EB06,0x7EBF5,0x7ECE4,0x7EDD3,0x7EEC2,0x7EFE6,0x7F0D5,0x7F1C4,0x7F2B3,0x7F3A2,0x7F491,0x7F5B5,0x7F6A4,0x7F793,0x7F882,0x7F971,0x7FA60,0x7FB33,0x7FBE8,0x7FD9D,0x7FE50,0x7FF75,0x8116E,0x81274,0x8137D,0x81483,0x8158C,0x81692,0x8179B,0x818A1,0x825E2,0x82761,0x827F0,0x82873,0x828F6,0x8299F,0x82B1E,0x82BAD,0x82C30,0x82CB3,0x82D63,0x82EE2,0x82F71,0x82FF4,0x83077,0x83127,0x832A6,0x83335,0x833B8,0x8343B,0x83508,0x83611,0x8371A,0x8381F,0x83AB0,0x83B56,0x83BEE,0x83D69,0x83E4E,0x83EE2,0x83F68,0x83FFC,0x84082,0x84122,0x841F4,0x84288,0x8430E,0x843A2,0x84428,0x844E5,0x845DB,0x8466F,0x846F5,0x84789,0x8480F,0x849A1,0x84A30,0x84AD4,0x84B97,0x84C26,0x84CCA,0x84D8D,0x84E1C,0x84EC0,0x84F82,0x85011,0x850B5,0x8519D,0x8529A,0x85374,0x85475,0x85536,0x85761,0x8582D,0x85D74,0x85E65,0x85F55,0x86040,0x86143,0x86584,0x86663,0x86742,0x86821,0x86900,0x869DF,0x86A8C,0x86B62,0x86C38,0x86D0E,0x86DE4,0x86EBA,0x871DB,0x873CF,0x875D8,0x876F1,0x87832,0x87966,0x87A9D,0x87CA4,0x87D9C,0x87E79,0x87F56,0x8803F,0x8811F,0x881FF,0x882DF,0x883D1,0x88932,0x88A22,0x88AE0,0x88BD3,0x88C92,0x88DA1,0x88EC1,0x88FC4,0x89171,0x89272,0x893A3,0x8949B,0x8987D,0x8996A,0x89A7F,0x89B68,0x89C53,0x89CF5,0x89D8A,0x89E76,0x89F18,0x89FAD,0x8A0D3,0x8A187,0x8A221,0x8A2C8,0x8A364,0x8A3FC,0x8A498,0x8A532,0x8A5CC,0x8A673,0x8A70F,0x8A7A7,0x8A843,0x8A8DD,0x8A977,0x8AB5B,0x8AC54,0x8AD09,0x8ADEC,0x8AECF,0x8B10A,0x8B1C0,0x8B276,0x8B32C,0x8B3E2,0x8B498,0x8B54E,0x8B604,0x8B6BA,0x8B770,0x8B826,0x8B8E9,0x8B99F,0x8BA55,0x8BB0B,0x8BBC1,0x8BC77,0x8BD2D,0x8BDE3,0x8BE99,0x8BF4F,0x8C71A,0x8C7B4,0x8D314,0x8D42B,0x8D59A,0x8D672,0x8D759,0x8D85E,0x8D92E,0x8D9F9,0x8DB02,0x8DBDB,0x8DCBB,0x8DDEE,0x8DEBF,0x8DF89,0x8E065,0x8E21E,0x8E2DE,0x8E390,0x8E42B,0x8E4B4,0x8E572,0x8E638,0x8E6F0,0x8E791,0x8E81E,0x8E8E4,0x8E9AA,0x8EA62,0x8EB03,0x8EB90,0x8EC80,0x8ED3A,0x8EF01,0x8F0D5,0x8F1B2,0x8F252,0x8F334,0x8F40B,0x8F4B0,0x8F57F,0x8F64C,0x8F709,0x8F817,0x8F8DC,0x8FA41,0x8FC92,0x8FD80,0x8FE5F,0x8FF07,0x8FF9F,0x90065,0x9010D,0x901A5,0x90278,0x90320,0x903B8,0x9048A,0x90532,0x905CA,0x9073D,0x9082B,0x9090C,0x909E6,0x90A8E,0x90B26,0x90BEC,0x90C94,0x90D2C,0x90DFF,0x90EA7,0x90F3F,0x91011,0x910B9,0x91151,0x91224,0x912CC,0x91364,0x91437,0x914DF,0x91577,0x91776,0x91858,0x91926,0x919E0,0x91AA1,0x91B6F,0x91C17,0x91CF2,0x91D87,0x91FCE,0x92088,0x92131,0x921FD,0x922C5,0x9237F,0x92428,0x92642,0x926FC,0x927A5,0x92871,0x92939,0x929F3,0x92A9C,0x92BD1,0x92D30,0x92EF9,0x92F58,0x93035,0x93112,0x93282,0x93334,0x933E0,0x934B2,0x93582,0x9376D,0x9383F,0x9390F,0x93B4A,0x93C5C,0x93D59,0x93E6B,0x93F3E,0x93FD6,0x940FA,0x94265,0x94435,0x944FB,0x945AC,0x9468A,0x9475E,0x94832,0x94990,0x94A87,0x94B9B,0x94C38,0x94D2F,0x94E31,0x94F59,0x95050,0x95164,0x95201,0x952F8,0x953FA,0x9556F,0x9564B,0x9571D,0x957EC,0x95882,0x95948,0x959F9,0x95B1A,0x95CAD,0x95E21,0x96354,0x96A9E,0x96B6D,0x96C42,0x96D10,0x96E0D,0x96ED3,0x96FAA,0x9703B,0x970EA,0x97766,0x97835,0x9790A,0x979D8,0x97AD5,0x97B9B,0x97C69,0x97D66,0x97E2C,0x97F03,0x97F94,0x98043,0x9821F,0x983C8,0x9856E,0x9864D,0x98733,0x9881B,0x9893B,0x98A1B,0x98AFE,0x98BE3,0x98CD8,0x98E09,0x98EF3,0x98FDD,0x990D7,0x991C1,0x992AB,0x9941D,0x994CE,0x99587,0x995E9,0x996A7,0x9977B,0x9982F,0x998DF,0x999B3,0x99A67,0x99BD0,0x99C81,0x99D3B,0x99D9D,0x99E5B,0x99F2F,0x99FE3,0x9A093,0x9A167,0x9A21B,0x9A453,0x9A5D1,0x9A69C,0x9A767,0x9A832,0x9A8FD,0x9A9E6,0x9AAB0,0x9AD50,0x9ADEA,0x9AED4,0x9AF6E,0x9B013,0x9B0AD,0x9B133,0x9B1CD,0x9B349,0x9B4F4,0x9C551,0x9EF09,0x9F0C6,0xA058C,0xA06C5,0xA0788,0xA0857,0xA091D,0xA09C2,0xA0B47,0xA0C6B,0xA0D99,0xA0E61,0xA0F6F,0xA1037,0xA1135,0xA12A6,0xA13CC,0xA1500,0xA15C8,0xA16D6,0xA179E,0xA189D,0xA2D83,0xA2F34,0xA30AF,0xA3155,0xA322A,0xA32D0,0xA33A5,0xA344B,0xA3520,0xA35C6,0xA3695,0xA37E9,0xA392E,0xA3B59,0xA3C1F,0xA3C6F,0xA3CD7,0xA3D6B,0xA3DF1,0xA3E77,0xA3F0D,0xA40A4,0xA416A,0xA41BA,0xA4222,0xA42B6,0xA433C,0xA43C2,0xA4458,0x15C924,0x15CA20,0x164E2D,0x169C98,0x169CB5,0x16DE99,0x18DA4A,0x96044}
local LastBulletOfTypeHandled = {}
ResetRNG(RandomSeed)
for i = 1,#HardcodedBullets,1 do
  local BulletType = readInteger(string.format("gnazo.exe+%X",HardcodedBullets[i]))
  local ShotType = math.floor(BulletType/100)
  local ShotData = ShotTypeLookup[ShotType]
  if not (ShotData == nil) then
    local NewColor
    if LastBulletOfTypeHandled[BulletType] == nil then
      NewColor = math.random(1,ShotData["Skins"])-1
      if (ShotType == 225) and (HardcodedBullets[i] >= 0x12013) and (HardcodedBullets[i] < 0x125C3) then --Meiling's Spear Shots
        NewColor = NewColor * 16
      end
    else
      if (HardcodedBullets[i] - LastBulletOfTypeHandled[BulletType][2]) < 800 then
        NewColor = LastBulletOfTypeHandled[BulletType][1]
      else
        NewColor = math.random(1,ShotData["Skins"])-1
        if (ShotType == 225) and (HardcodedBullets[i] >= 0x12013) and (HardcodedBullets[i] < 0x125C3) then
          NewColor = NewColor * 16
        end
      end
    end
    LastBulletOfTypeHandled[BulletType] = {NewColor,HardcodedBullets[i]}
    writeInteger(string.format("gnazo.exe+%X",HardcodedBullets[i]), (ShotData["ID"]*100)+NewColor )
  end
end

local HardcodedBulletsToUpdate = {0x25FA6,0x40597,0x4129D,0x4141B,0x4158A,0x4175F,0x421B6}
local CurrentHardcodedBulletColors = {}
local BulletsRandomized = false

local AddFunc =
  function()
    if not ChangingRooms then
      if not BulletsRandomized then
        for i = 1,#HardcodedBulletsToUpdate,1 do --Randomize the colors of hardcoded bullets on a per-room basis
          ResetRNG( (RandomSeed+DestinationRoom)*i )
          local BulletType = readInteger(string.format("gnazo.exe+%X",HardcodedBulletsToUpdate[i]))
          local ShotData = ShotTypeLookup[math.floor(BulletType/100)]
          if not (ShotData == nil) then
            local NewColor = math.random(1,ShotData["Skins"]) - 1
            if not (NewColor == CurrentHardcodedBulletColors[i]) then
              CurrentHardcodedBulletColors[i] = NewColor
              writeInteger(string.format("gnazo.exe+%X",HardcodedBulletsToUpdate[i]), (ShotData["ID"]*100)+NewColor )
              --print("Hardcoded Bullet "..i.." color changed to "..NewColor)
            end
          end
        end
        BulletsRandomized = true
      end
    elseif ClearRoomData then
      BulletsRandomized = false
    end
  end
  
table.insert(RuntimeFunctions,AddFunc)